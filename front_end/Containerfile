FROM continuumio/miniconda3

# See https://jtreminio.com/blog/running-docker-containers-as-current-host-user/#ok-so-what-actually-works
ARG USER_ID=1000
ARG GROUP_ID=1000
ARG USER=codebuddy

ADD VERSION /
ADD Settings.yaml /

RUN apt-get update \
 && apt-get --assume-yes install mariadb-server \
 && apt-get install -y bzip2 zip nodejs npm vim \
# && apt-get --assume-yes install libmariadb3 libmariadb-dev \
 && apt-get -y autoremove \
 && apt-get clean \
 && conda install -y tornado==6.0.4 requests==2.24.0 Pillow==7.1.2 PyYAML==5.3.1 markdown2==2.3.8 curl==7.69.1 git==2.23.0 \
 && conda install -c conda-forge spacy \
 && python -m spacy download en_core_web_sm \
 && mkdir -p /app /conda /course /migration_scripts /scheduled_scripts /static

RUN apt-get -y install curl

RUN wget https://downloads.mariadb.com/MariaDB/mariadb_repo_setup \
 && echo "fc84b8954141ed3c59ac7a1adfc8051c93171bae7ba34d7f9aeecd3b148f1527  mariadb_repo_setup" \
 && chmod +x mariadb_repo_setup \
 && ./mariadb_repo_setup \
 && apt-get -y install libmariadb3 libmariadb-dev \
 && pip install mariadb

#RUN TIMEZONE=$(grep "time_zone: " Settings.yaml | sed -En "s/time_zone: (.*)/\1/p") \
# && apt-get update \
# && apt-get install -y bzip2 tzdata zip \
# && ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime \
# && echo "$TIMEZONE" | tee /etc/timezone && dpkg-reconfigure --frontend noninteractive tzdata \
# && apt-get -y autoremove \
# && apt-get clean \
# && conda install -y tornado==6.0.4 requests==2.24.0 Pillow==7.1.2 PyYAML==5.3.1 markdown2==2.3.8 curl==7.69.1 git==2.23.0 \
# && mkdir -p /app /conda /course /migration_scripts /scheduled_scripts /static
ADD front_end/aux/*.py /tmp/

RUN cd /static \
 && mkdir bulma \
 && npm init -y \
 && sed -i 's/index\.js/sass\/mystyles\.scss/g' package.json \
 && npm install node-sass --save-dev \
 && npm install bulma --save-dev \
 && mkdir sass \
 && echo "@charset \"utf-8\";" > sass/mystyles.scss \
 && echo "@import \"../node_modules/bulma/bulma.sass\";" >> sass/mystyles.scss \
 && python /tmp/modify_package.py

ADD front_end/css/*.scss /static/sass/

RUN cd /static \
 && npm run css-build \
 && wget https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js \
 && curl https://raw.githubusercontent.com/CreativeBulma/bulma-tooltip/master/dist/bulma-tooltip.min.css > bulma-tooltip.min.css \
 && git clone https://github.com/ajaxorg/ace-builds.git \
 && cp -r ace-builds/src-min-noconflict/* . \
 && rm -rf ace-builds \
 && wget -O /static/fontawesome.js https://use.fontawesome.com/releases/v5.3.1/js/all.js

## To learn about bulmaswatch, see https://jenil.github.io/bulmaswatch/flatly.
## This is a basic way to install bulmaswatch.
## For more advanced used, may need to use this strategy: https://bulma.io/documentation/customize/with-node-sass/

ADD front_end/css/*.css /static/
ADD front_end/images/* /static/
ADD front_end/js/* /static/
ADD front_end/build_html.sh /app/
ADD front_end/startup.sh /app/
ADD front_end/scheduled_scripts/* /scheduled_scripts/
ADD front_end/migration_scripts/* /migration_scripts/
ADD front_end/html/* /tmp/
ADD front_end/handlers/*.py /app/
ADD front_end/*.py /app/
ADD front_end/secrets.yaml /app/
ADD front_end/dump_for_mysql.py /app/
ADD front_end/CodeBuddy_dump.sql /

RUN bash /app/build_html.sh

# We'll map the user inside to the container to the user outside the container.
# This ensures that the permissions on files shared via volumes will be
# translatable in both directions.
 RUN groupadd -g ${GROUP_ID} ${USER} && \
     useradd -l -u ${USER_ID} -g ${USER} ${USER} && \
    install -d -m 0755 -o ${USER} -g ${USER} /home/${USER} && \
    chown --silent --no-dereference --recursive \
          ${USER_ID}:${GROUP_ID} \
          /app /conda /course /migration_scripts /static /scheduled_scripts /tmp

 USER $USER

 ENTRYPOINT ["bash", "/app/startup.sh"]
